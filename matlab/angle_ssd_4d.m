% ssd 4d cooperative angle investigation
% 2d
ANGLE_NUMBER = 30 + 1;
qpsk = [0.707 + 0.707j, 0.707 - 0.707j, -0.707 + 0.707j, -0.707 - 0.707j];
sita = linspace(0, 45, ANGLE_NUMBER);
rmap = zeros(ANGLE_NUMBER, 4);
dmin = zeros(1, ANGLE_NUMBER);
m = cosd(sita);
n = sind(sita);
dbuffer = zeros(1, 3000);
for angle = 1:ANGLE_NUMBER
    for index = 1:4
        t1 = real(qpsk(index)) * m(angle) + imag(qpsk(index)) * n(angle);
        t2 = -real(qpsk(index)) * n(angle) + imag(qpsk(index)) * m(angle);
        rmap(angle, index) = t1 + t2 * 1j;
    end
    cnt = 1;
    for index = 1:4
        for index2 = 1:4
            if index ~= index2
                dbuffer(cnt) = power( ...
                                real(rmap(angle, index)) ...
                                - real(rmap(angle, index2)), ... 
                                2);
                dbuffer(cnt + 12) = power( ...
                                imag(rmap(angle, index)) ...
                                - imag(rmap(angle, index2)), ... 
                                2);
                cnt = cnt + 1;
            end
        end
    end
    dmin(angle) = min(dbuffer(1:24));
end
figure;
plot(sita,dmin);
grid;

%4d

sita2 = linspace(0, 45, ANGLE_NUMBER);
rmap2 = zeros(ANGLE_NUMBER, ANGLE_NUMBER, 32);
dmin2 = zeros(ANGLE_NUMBER, ANGLE_NUMBER);
dmin3 = zeros(ANGLE_NUMBER, ANGLE_NUMBER);
dmin4 = zeros(ANGLE_NUMBER, ANGLE_NUMBER);
for angle = 1:ANGLE_NUMBER
for angle2 = 1:ANGLE_NUMBER
    for index = 1:4
    for index2 = 1:4
        t1 = real(qpsk(index)) * m(angle) * m(angle2) ...
            + imag(qpsk(index)) * n(angle) * m(angle2) ...
            + real(qpsk(index2)) * m(angle) * n(angle2) ...
            + imag(qpsk(index2)) * n(angle) * n(angle2);
        t2 = -real(qpsk(index)) * n(angle) * m(angle2) ...
            + imag(qpsk(index)) * m(angle) * m(angle2) ...
            - real(qpsk(index2)) * n(angle) * n(angle2) ...
            + imag(qpsk(index2)) * m(angle) * n(angle2);
        t3 = -real(qpsk(index)) * m(angle) * n(angle2) ...
            - imag(qpsk(index)) * n(angle) * n(angle2) ...
            + real(qpsk(index2)) * m(angle) * m(angle2) ...
            + imag(qpsk(index2)) * n(angle) * m(angle2);
        t4 = real(qpsk(index)) * n(angle) * n(angle2) ...
            - imag(qpsk(index)) * m(angle) * n(angle2) ...
            - real(qpsk(index2)) * n(angle) * m(angle2) ...
            + imag(qpsk(index2)) * m(angle) * m(angle2);
        ii = 4 * (index - 1) + index2;
        rmap2(angle, angle2, 2 * ii - 1) = t1 + t2 * 1j;
        rmap2(angle, angle2, 2 * ii) = t3 + t4 *1j;
    end
    end
    cnt = 1;
    for index = 1:2:32
        for index2 = 1:2:32
            if index ~= index2
                dbuffer(cnt) = power( ...
                                real(rmap2(angle, angle2, index)) ...
                                - real(rmap2(angle, angle2, index2)), ... 
                                2);
                dbuffer(cnt + 240) = power( ...
                                imag(rmap2(angle, angle2, index)) ...
                                - imag(rmap2(angle, angle2, index2)), ... 
                                2);
                cnt = cnt + 1;
            end
        end
    end
    dmin2(angle, angle2) = min(dbuffer(1:480));
    cnt = 1;
    for index = 1:2:32
        for index2 = 1:2:32
            if index ~= index2
                dbuffer(cnt) = power( ...
                                real(rmap2(angle, angle2, index)) ...
                                - real(rmap2(angle, angle2, index2)), ... 
                                2) ...
                                + power( ...
                                real(rmap2(angle, angle2, index + 1)) ...
                                - real(rmap2(angle, angle2, index2 + 1)), ... 
                                2);
                dbuffer(cnt + 240) = power( ...
                                imag(rmap2(angle, angle2, index)) ...
                                - imag(rmap2(angle, angle2, index2)), ... 
                                2) ...
                                + power( ...
                                imag(rmap2(angle, angle2, index + 1)) ...
                                - imag(rmap2(angle, angle2, index2 + 1)), ... 
                                2);
                cnt = cnt + 1;
            end
        end
    end
    dmin3(angle, angle2) = min(dbuffer(1:480));
    cnt = 1;
    for index = 1:2:32
        for index2 = 1:2:32
            if index ~= index2
                dbuffer(cnt) = power( ...
                                real(rmap2(angle, angle2, index)) ...
                                - real(rmap2(angle, angle2, index2)), ... 
                                2) ...
                                + power( ...
                                real(rmap2(angle, angle2, index + 1)) ...
                                - real(rmap2(angle, angle2, index2 + 1)), ... 
                                2) ...
                                + power( ...
                                imag(rmap2(angle, angle2, index)) ...
                                - imag(rmap2(angle, angle2, index2)), ... 
                                2);
                dbuffer(cnt + 240) = power( ...
                                imag(rmap2(angle, angle2, index)) ...
                                - imag(rmap2(angle, angle2, index2)), ... 
                                2) ...
                                + power( ...
                                imag(rmap2(angle, angle2, index + 1)) ...
                                - imag(rmap2(angle, angle2, index2 + 1)), ... 
                                2) ...
                                + power( ...
                                real(rmap2(angle, angle2, index)) ...
                                - real(rmap2(angle, angle2, index2)), ... 
                                2);
                cnt = cnt + 1;
            end
        end
    end
    dmin4(angle, angle2) = min(dbuffer(1:480));
end
end
figure;
surf(sita, sita2, dmin2);
figure;
surf(sita, sita2, dmin3);
figure;
surf(sita, sita2, dmin4);
                        
                       
                     



